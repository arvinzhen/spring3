<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.liqx.java.study.spring3.persist.second.mapper.AdminsMapper">
  <resultMap id="BaseResultMap" type="top.liqx.java.study.spring3.persist.second.model.AdminsModel">
    <!--@mbg.generated-->
    <!--@Table `admins`-->
    <id column="adminId" jdbcType="INTEGER" property="adminid" />
    <result column="adminName" jdbcType="VARCHAR" property="adminname" />
    <result column="adminPwd" jdbcType="VARCHAR" property="adminpwd" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `adminId`, `adminName`, `adminPwd`, `identity`
  </sql>
  <insert id="insertSelective" keyColumn="adminId" keyProperty="adminid" parameterType="top.liqx.java.study.spring3.persist.second.model.AdminsModel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admins`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminname != null">
        `adminName`,
      </if>
      <if test="adminpwd != null">
        `adminPwd`,
      </if>
      <if test="identity != null">
        `identity`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.liqx.java.study.spring3.persist.second.model.AdminsModel">
    <!--@mbg.generated-->
    update `admins`
    <set>
      <if test="adminname != null">
        `adminName` = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        `adminPwd` = #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        `identity` = #{identity,jdbcType=INTEGER},
      </if>
    </set>
    where `adminId` = #{adminid,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update `admins`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`adminName` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `adminId` = #{item.adminid,jdbcType=INTEGER} then #{item.adminname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`adminPwd` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `adminId` = #{item.adminid,jdbcType=INTEGER} then #{item.adminpwd,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`identity` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when `adminId` = #{item.adminid,jdbcType=INTEGER} then #{item.identity,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where `adminId` in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.adminid,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="adminId" keyProperty="adminid" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admins`
    (`adminName`, `adminPwd`, `identity`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.adminname,jdbcType=VARCHAR}, #{item.adminpwd,jdbcType=VARCHAR}, #{item.identity,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="adminId" keyProperty="adminid" parameterType="top.liqx.java.study.spring3.persist.second.model.AdminsModel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admins`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        `adminId`,
      </if>
      `adminName`,
      `adminPwd`,
      `identity`,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        #{adminid,jdbcType=INTEGER},
      </if>
      #{adminname,jdbcType=VARCHAR},
      #{adminpwd,jdbcType=VARCHAR},
      #{identity,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="adminid != null">
        `adminId` = #{adminid,jdbcType=INTEGER},
      </if>
      `adminName` = #{adminname,jdbcType=VARCHAR},
      `adminPwd` = #{adminpwd,jdbcType=VARCHAR},
      `identity` = #{identity,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="adminId" keyProperty="adminid" parameterType="top.liqx.java.study.spring3.persist.second.model.AdminsModel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admins`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        `adminId`,
      </if>
      <if test="adminname != null">
        `adminName`,
      </if>
      <if test="adminpwd != null">
        `adminPwd`,
      </if>
      <if test="identity != null">
        `identity`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminid != null">
        #{adminid,jdbcType=INTEGER},
      </if>
      <if test="adminname != null">
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="adminid != null">
        `adminId` = #{adminid,jdbcType=INTEGER},
      </if>
      <if test="adminname != null">
        `adminName` = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="adminpwd != null">
        `adminPwd` = #{adminpwd,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        `identity` = #{identity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>